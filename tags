!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
ALGORITHM1	sFFT-1.0-2.0/computefourier.cc	/^bool ALGORITHM1   = true;$/;"	v
AWGN	sFFT-1.0-2.0/utils.cc	/^double AWGN(complex_t *x, int n, double std_noise){$/;"	f
CC	sFFT-1.0-2.0/GNUmakefile	/^CC=g++$/;"	m
COMPUTEFOURIER_H	sFFT-1.0-2.0/computefourier.h	26;"	d
CXXFLAGS	sFFT-1.0-2.0/GNUmakefile	/^CXXFLAGS=-Wall -Wconversion -O2$/;"	m
Cheb	sFFT-1.0-2.0/filters.cc	/^double Cheb(double m, double x){$/;"	f
Comb_Filt	sFFT-1.0-2.0/computefourier.cc	/^int Comb_Filt(complex_t *origx, int n, int num, int W_Comb, int* Comb_Approved){$/;"	f
DEFAULT_PREAMBLE	sFFT-1.0-2.0/plot.h	35;"	d
DESTS	sFFT-1.0-2.0/GNUmakefile	/^DESTS=experiment generate_graphs kaiserbessel$/;"	m
FFTW_H	sFFT-1.0-2.0/fftw.h	26;"	d
FFT_H	sFFT-1.0-2.0/fft.h	26;"	d
Filter	sFFT-1.0-2.0/filters.h	/^struct Filter {$/;"	s
GAUSSFILTER_H	sFFT-1.0-2.0/filters.h	26;"	d
I0	sFFT-1.0-2.0/filters.cc	/^double I0(double x){$/;"	f
LDFLAGS	sFFT-1.0-2.0/GNUmakefile	/^LDFLAGS=-g$/;"	m
LDLIBS	sFFT-1.0-2.0/GNUmakefile	/^LDLIBS=-lfftw3 -lfftw3f -lm -lrt$/;"	m
OBJS	sFFT-1.0-2.0/GNUmakefile	/^OBJS:=$(subst .cc,.o,$(SRCS))$/;"	m
OPTIMIZE_FFTW	sFFT-1.0-2.0/computefourier.h	35;"	d
OPTIMIZE_FFTW	sFFT-1.0-2.0/fftw.h	41;"	d
PARAMETERS_H	sFFT-1.0-2.0/parameters.h	26;"	d
PLOT_H	sFFT-1.0-2.0/plot.h	26;"	d
RM	sFFT-1.0-2.0/GNUmakefile	/^RM=rm -f$/;"	m
SRCS	sFFT-1.0-2.0/GNUmakefile	/^SRCS:=$(filter-out $(DESTS:%=%.cc), $(wildcard *.cc))$/;"	m
TIMER_H	sFFT-1.0-2.0/timer.h	26;"	d
TIMER_TYPE	sFFT-1.0-2.0/timer.h	29;"	d
TIMING	sFFT-1.0-2.0/computefourier.cc	/^bool TIMING       = true;$/;"	v
USE_DOUBLE	sFFT-1.0-2.0/fft.h	36;"	d
UTILS_H	sFFT-1.0-2.0/utils.h	26;"	d
VERBOSE	sFFT-1.0-2.0/computefourier.cc	/^bool VERBOSE      = false;$/;"	v
Vec	sFFT-1.0-2.0/fft.h	32;"	d
WITH_COMB	sFFT-1.0-2.0/computefourier.cc	/^bool WITH_COMB = false;$/;"	v
binomial_cdf	sFFT-1.0-2.0/utils.cc	/^double binomial_cdf(double prob, int n, int needed){$/;"	f
cabs2	sFFT-1.0-2.0/utils.cc	/^double cabs2(complex_t x){$/;"	f
cexp	sFFT-1.0-2.0/fft.h	41;"	d
complex_t	sFFT-1.0-2.0/fft.h	/^typedef double complex complex_t;$/;"	t
complex_t	sFFT-1.0-2.0/fft.h	/^typedef float complex complex_t;$/;"	t
debug_inner_loop	sFFT-1.0-2.0/computefourier.cc	/^void debug_inner_loop(complex_t *origx, int n, const Filter &filter,$/;"	f
estimate_values	sFFT-1.0-2.0/computefourier.cc	/^estimate_values(const int *hits, const int &hits_found,$/;"	f
evaluate_runtime	sFFT-1.0-2.0/experiment.cc	/^double evaluate_runtime(int n, double lobefrac, double tolerance,$/;"	f
exp	sFFT-1.0-2.0/fft.h	42;"	d
fftw_destroy_plan	sFFT-1.0-2.0/fftw.h	36;"	d
fftw_dft	sFFT-1.0-2.0/fftw.cc	/^int fftw_dft(complex_t *out, int n, complex_t *x, int backwards){$/;"	f
fftw_execute	sFFT-1.0-2.0/fftw.h	35;"	d
fftw_free	sFFT-1.0-2.0/fftw.h	37;"	d
fftw_plan	sFFT-1.0-2.0/fftw.h	34;"	d
fftw_plan_dft_1d	sFFT-1.0-2.0/fftw.h	33;"	d
fftw_plans	sFFT-1.0-2.0/fftw.cc	/^std::map<int, fftw_plan> fftw_plans;$/;"	v
find_estimates	soda_paper/inner_location_loop.m	/^function X_estim=find_estimates(h_sigma,o_sigma,tau,G,I,Z,n)$/;"	f
find_estimates	soda_paper/inner_location_loop_BACKUP_8622.m	/^function X_estim=find_estimates(h_sigma,o_sigma,tau,G,I,Z,n)$/;"	f
find_estimates	soda_paper/inner_location_loop_BASE_8622.m	/^function X_estim=find_estimates(h_sigma,o_sigma,omega,tau,G,I,Z,n)$/;"	f
find_estimates	soda_paper/inner_location_loop_LOCAL_8622.m	/^function X_estim=find_estimates(h_sigma,o_sigma,omega,tau,G,I,Z,n)$/;"	f
find_estimates	soda_paper/inner_location_loop_REMOTE_8622.m	/^function X_estim=find_estimates(h_sigma,o_sigma,tau,G,I,Z,n)$/;"	f
find_largest_indices	sFFT-1.0-2.0/utils.cc	/^void find_largest_indices(int *output, int num, real_t *samples, int n){$/;"	f
finding_I	soda_paper/inner_location_loop.m	/^function I=finding_I(Z,n,h_sigma)$/;"	f
finding_I	soda_paper/inner_location_loop_BACKUP_8622.m	/^function I=finding_I(Z,n,h_sigma)$/;"	f
finding_I	soda_paper/inner_location_loop_BASE_8622.m	/^function I=finding_I(Z,n,h_sigma)$/;"	f
finding_I	soda_paper/inner_location_loop_LOCAL_8622.m	/^function I=finding_I(Z,n,h_sigma)$/;"	f
finding_I	soda_paper/inner_location_loop_REMOTE_8622.m	/^function I=finding_I(Z,n,h_sigma)$/;"	f
floor_to_pow2	sFFT-1.0-2.0/utils.cc	/^int floor_to_pow2(double x){$/;"	f
freq	sFFT-1.0-2.0/filters.h	/^  complex_t *freq;$/;"	m	struct:Filter
gcd	sFFT-1.0-2.0/utils.cc	/^int gcd(int a, int b){$/;"	f
generate_z	soda_paper/inner_location_loop.m	/^function z=generate_z(y,w,B)$/;"	f
generate_z	soda_paper/inner_location_loop_BACKUP_8622.m	/^function z=generate_z(y,w,B)$/;"	f
generate_z	soda_paper/inner_location_loop_BASE_8622.m	/^function z=generate_z(y,w,B)$/;"	f
generate_z	soda_paper/inner_location_loop_LOCAL_8622.m	/^function z=generate_z(y,w,B)$/;"	f
generate_z	soda_paper/inner_location_loop_REMOTE_8622.m	/^function z=generate_z(y,w,B)$/;"	f
get_I_dash	soda_paper/outer_loop.m	/^function I_dash=get_I_dash(union_of_all_sets,s,L)$/;"	f
get_expermient_vs_K_parameters	sFFT-1.0-2.0/parameters.cc	/^  void get_expermient_vs_K_parameters(int K, bool WITH_COMB, double &Bcst_loc, double &Bcst_est,  double &Comb_cst,  int &loc_loops, $/;"	f
get_expermient_vs_N_parameters	sFFT-1.0-2.0/parameters.cc	/^void get_expermient_vs_N_parameters(int N, bool WITH_COMB, double &Bcst_loc, double &Bcst_est,  double &Comb_cst,  int &loc_loops, $/;"	f
get_s	soda_paper/outer_loop.m	/^function [s,union_of_all_sets]=get_s(I,L)$/;"	f
get_sigma_and_tau	soda_paper/inner_location_loop.m	/^function [sigma,tau]=get_sigma_and_tau(n)$/;"	f
get_sigma_and_tau	soda_paper/inner_location_loop_BACKUP_8622.m	/^function [sigma,tau]=get_sigma_and_tau(n)$/;"	f
get_sigma_and_tau	soda_paper/inner_location_loop_BASE_8622.m	/^function [sigma,tau]=get_sigma_and_tau(n)$/;"	f
get_sigma_and_tau	soda_paper/inner_location_loop_LOCAL_8622.m	/^function [sigma,tau]=get_sigma_and_tau(n)$/;"	f
get_sigma_and_tau	soda_paper/inner_location_loop_REMOTE_8622.m	/^function [sigma,tau]=get_sigma_and_tau(n)$/;"	f
get_the_fourier_transform	soda_paper/outer_loop.m	/^function X=get_the_fourier_transform(set_of_X_r_I_dash,I_dash)$/;"	f
get_the_sets	soda_paper/outer_loop.m	/^function [set_I,set_h_sigma,set_o_sigma,set_Z,set_tau,set_G]=get_the_sets(x,L,n)$/;"	f
get_time	sFFT-1.0-2.0/timer.cc	/^double get_time(){$/;"	f
get_window_function	soda_paper/inner_location_loop.m	/^function [B,g]=get_window_function(n)$/;"	f
get_window_function	soda_paper/inner_location_loop_BACKUP_8622.m	/^function [B,g]=get_window_function(n)$/;"	f
get_window_function	soda_paper/inner_location_loop_BASE_8622.m	/^function [omega,B,g]=get_window_function(n)$/;"	f
get_window_function	soda_paper/inner_location_loop_LOCAL_8622.m	/^function [B,g]=get_window_function(n)$/;"	f
get_window_function	soda_paper/inner_location_loop_REMOTE_8622.m	/^function [B,g]=get_window_function(n)$/;"	f
get_x_r_I_dash	soda_paper/outer_loop.m	/^function set_of_X_r_I_dash=get_x_r_I_dash(I_dash,set_h_sigma,set_o_sigma,set_Z,set_tau,set_G)$/;"	f
gnuplot_output	sFFT-1.0-2.0/plot.cc	/^void gnuplot_output(FILE *f, std::string preamble,$/;"	f
hash_function	soda_paper/inner_location_loop.m	/^function h_sigma=hash_function(n,sigma,B)$/;"	f
hash_function	soda_paper/inner_location_loop_BACKUP_8622.m	/^function h_sigma=hash_function(n,sigma,B)$/;"	f
hash_function	soda_paper/inner_location_loop_BASE_8622.m	/^function h_sigma=hash_function(n,sigma,B)$/;"	f
hash_function	soda_paper/inner_location_loop_LOCAL_8622.m	/^function h_sigma=hash_function(n,sigma,B)$/;"	f
hash_function	soda_paper/inner_location_loop_REMOTE_8622.m	/^function h_sigma=hash_function(n,sigma,B)$/;"	f
inner_location_loop	soda_paper/inner_location_loop.m	/^function [I,h_sigma,o_sigma,Z,tau,G]=inner_location_loop(x,n)$/;"	f
inner_location_loop	soda_paper/inner_location_loop_BACKUP_8622.m	/^function [I,h_sigma,o_sigma,Z,tau,G]=inner_location_loop(x,n)$/;"	f
inner_location_loop	soda_paper/inner_location_loop_BASE_8622.m	/^function [I,h_sigma,o_sigma,Z,omega,tau,G]=inner_location_loop(x,n)$/;"	f
inner_location_loop	soda_paper/inner_location_loop_LOCAL_8622.m	/^function [I,h_sigma,o_sigma,Z,tau,G]=inner_location_loop(x,n)$/;"	f
inner_location_loop	soda_paper/inner_location_loop_REMOTE_8622.m	/^function [I,h_sigma,o_sigma,Z,tau,G]=inner_location_loop(x,n)$/;"	f
inner_loop_filter_Comb	sFFT-1.0-2.0/computefourier.cc	/^int inner_loop_filter_Comb(int *J, int n, int num, int B, int a, int ai, int b, int loop_threshold,$/;"	f
inner_loop_filter_regular	sFFT-1.0-2.0/computefourier.cc	/^int inner_loop_filter_regular(int *J, int n, int num, int B, int a, int ai, int b, int loop_threshold,$/;"	f
inner_loop_locate	sFFT-1.0-2.0/computefourier.cc	/^int inner_loop_locate(complex_t *origx, int n, const Filter &filter,$/;"	f
main	sFFT-1.0-2.0/experiment.cc	/^int main(int argc, char **argv){$/;"	f
main	sFFT-1.0-2.0/generate_graphs.cc	/^int main(int argc, char **argv){$/;"	f
main	sFFT-1.0-2.0/kaiserbessel.cc	/^int main(){$/;"	f
make_box_t	sFFT-1.0-2.0/kaiserbessel.cc	/^int make_box_t(complex_t *x, int w, int n){$/;"	f
make_dolphchebyshev_t	sFFT-1.0-2.0/filters.cc	/^complex_t * make_dolphchebyshev_t(double lobefrac, double tolerance, int &w){$/;"	f
make_gaussian_t	sFFT-1.0-2.0/filters.cc	/^complex_t * make_gaussian_t(double lobefrac, double tolerance, int &w){$/;"	f
make_hamming_t	sFFT-1.0-2.0/kaiserbessel.cc	/^int make_hamming_t(complex_t *x, int w, int n){$/;"	f
make_kaiserbessel_t	sFFT-1.0-2.0/filters.cc	/^complex_t * make_kaiserbessel_t(double lobefrac, double tolerance, int &w){$/;"	f
make_multiple_t	sFFT-1.0-2.0/filters.cc	/^Filter make_multiple_t(complex_t *x, int w, int n, int b){$/;"	f
map_abs	sFFT-1.0-2.0/plot.cc	/^std::vector<real_t> map_abs(std::vector<complex_t> x){$/;"	f
map_imag	sFFT-1.0-2.0/plot.cc	/^std::vector<real_t> map_imag(std::vector<complex_t> x){$/;"	f
map_real	sFFT-1.0-2.0/plot.cc	/^std::vector<real_t> map_real(std::vector<complex_t> x){$/;"	f
mod_inverse	sFFT-1.0-2.0/utils.cc	/^int mod_inverse(int a, int n) {$/;"	f
nth_element_immutable	sFFT-1.0-2.0/utils.cc	/^real_t nth_element_immutable(real_t *input, int n, int num){$/;"	f
offset_function	soda_paper/inner_location_loop.m	/^function o_sigma=offset_function(h_sigma,n,sigma,B):$/;"	f
offset_function	soda_paper/inner_location_loop_BACKUP_8622.m	/^function o_sigma=offset_function(h_sigma,n,sigma,B):$/;"	f
offset_function	soda_paper/inner_location_loop_BASE_8622.m	/^function o_sigma=offset_function(h_sigma,n,sigma,B):$/;"	f
offset_function	soda_paper/inner_location_loop_LOCAL_8622.m	/^function o_sigma=offset_function(h_sigma,n,sigma,B):$/;"	f
offset_function	soda_paper/inner_location_loop_REMOTE_8622.m	/^function o_sigma=offset_function(h_sigma,n,sigma,B):$/;"	f
outer_loop	sFFT-1.0-2.0/computefourier.cc	/^outer_loop(complex_t *origx, int n, const Filter &filter, const Filter &filter_Est, int B2,$/;"	f
permute	soda_paper/inner_location_loop.m	/^function g=permute(x,sigma,tau,n)$/;"	f
permute	soda_paper/inner_location_loop_BACKUP_8622.m	/^function g=permute(x,sigma,tau,n)$/;"	f
permute	soda_paper/inner_location_loop_BASE_8622.m	/^function g=permute(x,sigma,tau,n)$/;"	f
permute	soda_paper/inner_location_loop_LOCAL_8622.m	/^function g=permute(x,sigma,tau,n)$/;"	f
permute	soda_paper/inner_location_loop_REMOTE_8622.m	/^function g=permute(x,sigma,tau,n)$/;"	f
phase	sFFT-1.0-2.0/utils.cc	/^double phase(complex_t x){$/;"	f
plot	sFFT-1.0-2.0/plot.h	/^inline int plot(std::string title, std::string titles, std::vector<T> x,$/;"	f
plot	sFFT-1.0-2.0/plot.h	/^inline int plot(std::string title, std::vector<T> x,$/;"	f
plot_fft	sFFT-1.0-2.0/plot.cc	/^void plot_fft(std::string preamble, std::vector<complex_t> x, int real){$/;"	f
plotn	sFFT-1.0-2.0/plot.cc	/^int plotn(std::string preamble, std::vector<std::vector<real_t> > plots, std::string titles){$/;"	f
plotn	sFFT-1.0-2.0/plot.cc	/^int plotn(std::string preamble, std::vector<std::vector<std::pair<real_t, real_t> > > plots, std::string titles)$/;"	f
predict_performance	sFFT-1.0-2.0/computefourier.cc	/^double predict_performance(int n, const Filter &filter, const Filter &filter_Est, int B2,$/;"	f
radix	sFFT-1.0-2.0/utils.cc	/^void radix(int byte, int size, int *A, int *TEMP) {$/;"	f
radix_filt	sFFT-1.0-2.0/utils.cc	/^void radix_filt(int byte, int size, int *A, int *TEMP, complex_t* Filter, complex_t* TMP_F) {$/;"	f
radix_sort	sFFT-1.0-2.0/utils.cc	/^void radix_sort(int *A, int size) {$/;"	f
radix_sort_filt	sFFT-1.0-2.0/utils.cc	/^void radix_sort_filt(int *A, complex_t* Filter,int size) {$/;"	f
real_t	sFFT-1.0-2.0/fft.h	/^typedef double real_t;$/;"	t
real_t	sFFT-1.0-2.0/fft.h	/^typedef float real_t;$/;"	t
reset_timer	sFFT-1.0-2.0/timer.cc	/^void reset_timer(){$/;"	f
run_experiment	sFFT-1.0-2.0/experiment.cc	/^void run_experiment(complex_t *x, int n,$/;"	f
run_experiment	sFFT-1.0-2.0/generate_graphs.cc	/^void run_experiment(complex_t *x, int n,$/;"	f
sfft	soda_paper/outer_loop.m	/^function X=sfft(x,L,n)$/;"	f
shift	sFFT-1.0-2.0/utils.cc	/^void shift(complex_t *x, int n, int r){$/;"	f
sinc	sFFT-1.0-2.0/filters.cc	/^double sinc(double x){$/;"	f
sizet	sFFT-1.0-2.0/filters.h	/^  int sizet;$/;"	m	struct:Filter
spawn_gnuplot	sFFT-1.0-2.0/plot.cc	/^FILE * spawn_gnuplot(){$/;"	f
split	sFFT-1.0-2.0/plot.cc	/^std::vector<std::string> &split(const std::string &s, char delim, std::vector<std::string> &elems) {$/;"	f
split	sFFT-1.0-2.0/plot.cc	/^std::vector<std::string> split(const std::string &s, char delim) {$/;"	f
start_time	sFFT-1.0-2.0/timer.cc	/^timespec start_time;$/;"	v
time	sFFT-1.0-2.0/filters.h	/^  complex_t *time;$/;"	m	struct:Filter
timesmod	sFFT-1.0-2.0/computefourier.cc	/^inline const int timesmod(const int &x, const int &a, const int &n) {$/;"	f
usage	sFFT-1.0-2.0/experiment.cc	/^usage(const char *progname)$/;"	f	file:
usage	sFFT-1.0-2.0/generate_graphs.cc	/^usage(const char *progname)$/;"	f	file:
vprintf	sFFT-1.0-2.0/computefourier.cc	43;"	d	file:
